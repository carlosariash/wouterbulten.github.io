{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app/config.js","src/app/device/pedometer.js","src/app/models/landmark-init-set.js","src/app/models/landmark-particle-set.js","src/app/models/particle-set.js","src/app/models/particle.js","src/app/models/sensor.js","src/app/models/user.js","src/app/models/vote-accumulator.js","src/app/simulation/landmark.js","src/app/slac-controller.js","src/app/util/kalman.js","src/app/util/linked-list.js","src/app/util/math.js","src/app/util/motion.js","src/app/util/sampling.js","src/app/view/replay-renderer.js","src/app/app-replay.js","src/tests/landmark-init.js","src/tests/rssi-filter.js","src/tests/voting.js"],"names":[],"mappings":"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","file":"slacjs-app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\nglobal module\n*/\n\n/**\n * General config for SLACjs\n * @type {Object}\n */\nmodule.exports = {\n\n\tenvironment: 'development',\n\n\texportData: true,\n\n\t/**\n\t * Device orientation, set to false to unlock\n\t * @see https://github.com/gbenvenuti/cordova-plugin-screen-orientation\n\t */\n\tdeviceOrientation: {\n\t\tandroid: 'portrait',\n\t\tios: 'landscape'\n\t},\n\n\tparticles: {\n\t\tN: 50,\n\n\t\tuser: {\n\t\t\tdefaultPose: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\ttheta: 0\n\t\t\t},\n\t\t\tsdStep: 0.2,\n\t\t\tsdHeading: 0.1\n\t\t}\n\t},\n\n\tpedometer: {\n\t\tstepSize: 0.4\n\t},\n\n\tlandmarkConfig: {\n\t\tn: 2,\n\t\ttxPower: -60,\n\t\tnoise: 4,\n\t\trange: 20\n\t},\n\n\tsensor: {\n\t\tmotion: {\n\t\t\tfrequency: 100\n\t\t},\n\t\trssi: {\n\t\t\tkalman: {\n\t\t\t\tR: 0.008,\n\t\t\t\tQ: 4\n\t\t\t},\n\t\t\tminMeasurements: 10\n\t\t}\n\t},\n\n\tble: {\n\t\tfrequency: 100,\n\t\tdevicePrefix: 'DoBeacon_upstair'\n\t}\n};\n","import KalmanFilter from '../util/kalman';\n\n/**\n * Accelerometer based pedometer\n *\n * Based on a FirefoxOS ES5 implementation.\n *\n * @see http://sebastien.menigot.free.fr/index.php?view=article&id=93\n */\nclass Pedometer {\n\n\tconstructor(updateRate) {\n\n\t\tconst windowSize = Math.round(2 / (updateRate / 1000));\n\n\t\tthis.accNorm = new Array(windowSize); // amplitude of the acceleration\n\n\t\tthis.varAcc   = 0.0; // variance of the acceleration on the window L\n\t\tthis.minAcc   = 1.0;  // minimum of the acceleration on the window L\n\t\tthis.maxAcc   = -Infinity; // maximum of the acceleration on the window L\n\t\tthis.threshold = -Infinity; // threshold to detect a step\n\t\tthis.sensibility = 1.0 / 30.0;  // sensibility to detect a step\n\n\t\tthis.stepCount = 0;           // number of steps\n\t\tthis.stepArr   = new Array(windowSize); // steps in 2 seconds\n\n\t\tthis.updateRate = updateRate; //Update rate in ms\n\n\t\tthis.filter = new KalmanFilter();\n\n\t\t//Callback to run after a new step\n\t\tthis.callbackOnStep = undefined;\n\t}\n\n\t/**\n\t * Process a new accelerometer measurement\n\t * @param  {Number} x\n\t * @param  {Number} y\n\t * @param  {Number} z\n\t * @return {void}\n\t */\n\tprocessMeasurement(x, y, z) {\n\n\t\tconst norm = this._computeNorm(x, y, z);\n\n\t\tthis.accNorm.push(norm);\n\t\tthis.accNorm.shift();\n\n\t\tthis._stepDetection();\n\t}\n\n\t/**\n\t * Register a callback function to run on a new step\n\t * @param  {Function} callback\n\t * @return {void}\n\t */\n\tonStep(callback) {\n\t\tthis.callbackOnStep = callback;\n\t}\n\n\t/**\n\t * Detect whether the user has done a step\n\t * @return {void}\n\t */\n\t_stepDetection() {\n\n\t\tthis._computeAccelerationVariance();\n\t\tthis.minAcc = Math.min.apply(null, this.accNorm);\n\t\tthis.maxAcc = Math.max.apply(null, this.accNorm);\n\n\t\tthis.threshold = (this.minAcc + this.maxAcc) / 2;\n\n\t\tconst diff = this.maxAcc - this.minAcc;\n\n\t\tif (\n\n\t\t\t//Sensiblity, the difference must increase the sensibility\n\t\t\tMath.abs(diff) >= this.sensibility &&\n\n\t\t\t//Acceleration must be above the threshold, and the previous one below (i.e. a new step)\n\t\t\t(this.accNorm[this.accNorm.length - 1] >= this.threshold) &&\n\t\t\t(this.accNorm[this.accNorm.length - 2] < this.threshold) &&\n\n\t\t\t(this.stepArr[this.stepArr.length - 1] === 0)\n\t\t) {\n\t\t\tthis.stepCount++;\n\t\t\tthis.stepArr.push(1);\n\t\t\tthis.stepArr.shift();\n\n\t\t\tif(this.callbackOnStep !== undefined) {\n\t\t\t\tthis.callbackOnStep();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.stepArr.push(0);\n\t\t\tthis.stepArr.shift();\n\t\t}\n\t}\n\n\t/**\n\t * Compute the norm of the acceleration vector\n\t * @param  {Number} x\n\t * @param  {Number} y\n\t * @param  {Number} z\n\t * @return {Number} norm of the vector\n\t */\n\t_computeNorm(x, y, z) {\n\t\tconst norm = Math.sqrt((x * x) + (y * y) + (z * z));\n\t\tconst filteredNorm = this.filter.filter(norm);\n\n\t\treturn filteredNorm / 9.80665;\n\t}\n\n\t/**\n\t * Compute the variance of the acceleration norm vector\n\t * @return {void}\n\t */\n\t_computeAccelerationVariance() {\n\t\tlet mean  = 0.0;\n\t\tlet mean2 = 0.0;\n\n\t\tfor (var k = 0; k < this.accNorm.length - 1; k++) {\n\t\t\tmean += this.accNorm[k];\n\t\t\tmean2 += this.accNorm[k] * this.accNorm[k];\n\t\t}\n\n\t\tthis.varAcc = ((mean * mean) - mean2) / this.accNorm.length;\n\n\t\tif ((this.varAcc - 0.5) > 0.0) {\n\t\t\tthis.varAcc -= 0.5;\n\t\t}\n\n\t\tif (!isNaN(this.varAcc)) {\n\t\t\tthis.filter.setMeasurementNoise(this.varAcc);\n\t\t\tthis.sensibility = 2.0 * (Math.sqrt(this.varAcc) / (9.80665 * 9.80665));\n\t\t}\n\t\telse {\n\t\t\tthis.sensibility = 1.0 / 30.0;\n\t\t}\n\t}\n}\n\nexport default Pedometer;","import LandmarkParticleSet from './landmark-particle-set';\n\nclass LandmarkInitializationSet {\n\t/**\n\t * Set containing multiple particle sets for initalisation of landmarks\n\t * @param  {Number} nParticles                 Number of particles in each set\n\t * @param  {Number} stdRange                   sd of range measurements\n\t * @param  {Number} randomParticles            Number of random particles\n\t * @param  {Number} effectiveParticleThreshold Threshold of effective particles\n\t * @return {LandmarkInitializationSet}\n\t */\n\tconstructor(nParticles = 100, stdRange = 0.5, randomParticles = 0, effectiveParticleThreshold = undefined) {\n\t\tthis.nParticles = nParticles;\n\t\tthis.stdRange = stdRange;\n\t\tthis.randomParticles = randomParticles;\n\n\t\tif (effectiveParticleThreshold === undefined) {\n\t\t\tthis.effectiveParticleThreshold = nParticles / 1.5;\n\t\t}\n\t\telse {\n\t\t\tthis.effectiveParticleThreshold = effectiveParticleThreshold;\n\t\t}\n\n\t\tthis.particleSetMap = new Map();\n\t}\n\n\t/**\n\t * Integrate a new measurement\n\t * @param {String} uid UID of landmark\n\t * @param {Number} x   Position of user\n\t * @param {Number} y   Position of user\n\t * @param {Number} r   Range measurement\n\t */\n\taddMeasurement(uid, x, y, r) {\n\t\tif (!this.has(uid)) {\n\t\t\tthis.particleSetMap.set(uid, new LandmarkParticleSet(\n\t\t\t\tthis.nParticles, this.stdRange, this.randomParticles, this.effectiveParticleThreshold\n\t\t\t));\n\t\t}\n\n\t\tthis.particleSetMap.get(uid).addMeasurement(x, y, r);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true when there is a particle set for a landmark\n\t * @param  {String}  uid\n\t * @return {Boolean}\n\t */\n\thas(uid) {\n\t\treturn this.particleSetMap.has(uid);\n\t}\n\n\t/**\n\t * Returns best position estimate for a landmark\n\t * @param  {String} uid\n\t * @return {Object}\n\t */\n\testimate(uid) {\n\t\treturn this.particleSetMap.get(uid).positionEstimate();\n\t}\n\n\t/**\n\t * Remove a particle set\n\t * @param  {String} uid\n\t * @return {void}\n\t */\n\tremove(uid) {\n\t\tthis.particleSetMap.delete(uid);\n\t}\n\n\t/**\n\t * Return all particle sets\n\t * @return {Array}\n\t */\n\tparticleSets() {\n\t\treturn this.particleSetMap.values();\n\t}\n}\n\nexport default LandmarkInitializationSet;\n","import { randn, pdfn, variance } from '../util/math';\nimport { lowVarianceSampling, numberOfEffectiveParticles, normalizeWeights } from '../util/sampling';\nimport { polarToCartesian } from '../util/motion';\n\nclass LandmarkParticleSet {\n\t/**\n\t * Create a new particle set for finding the initial position of a landmark\n\t * @param  {Number} nParticles                 Number of particles\n\t * @param  {Number} stdRange                   SD of range measurements\n\t * @param  {Number} randomParticles            Number of random particles to use each update\n\t * @param  {Number} effectiveParticleThreshold Threshold for resampling\n\t * @return {LandmarkParticleSet}\n\t */\n\tconstructor(nParticles, stdRange, randomParticles, effectiveParticleThreshold) {\n\t\tthis.nParticles = nParticles;\n\t\tthis.stdRange = stdRange;\n\t\tthis.effectiveParticleThreshold = effectiveParticleThreshold;\n\t\tthis.randomParticles = randomParticles;\n\n\t\tthis.measurements = 0;\n\t\tthis.particles = [];\n\t}\n\n\t/**\n\t * Integrate a new measurement in the particle set\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} r\n\t */\n\taddMeasurement(x, y, r) {\n\n\t\tif (this.measurements === 0) {\n\n\t\t\t//Init the particle set by adding random particles around the user\n\t\t\tthis.particles = this._randomParticles(this.nParticles, x, y, r);\n\t\t}\n\t\telse {\n\t\t\tthis._updateWeights(x, y, r);\n\n\t\t\t//Determine whether resampling is effective now\n\t\t\t//Is based on the normalised weights\n\t\t\tconst weights = this.particles.map(p => p.weight);\n\t\t\tif (numberOfEffectiveParticles(weights) < this.effectiveParticleThreshold) {\n\n\t\t\t\t//Use low variance resampling to generate a set of new particles\n\t\t\t\t//Returns a list of N-randomParticles particles\n\t\t\t\tlet set = this._resample(this.nParticles - this.randomParticles);\n\n\t\t\t\t//Add new uniformly distributed particles tot the set\n\t\t\t\t//Random particles are distributed around the current position\n\t\t\t\tthis.particles = set.concat(this._randomParticles(this.randomParticles, x, y, r));\n\t\t\t}\n\t\t}\n\n\t\tthis.measurements++;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the current estimate of this landmark's position\n\t * @return {Object}\n\t */\n\tpositionEstimate() {\n\n\t\t//Fast check, never return before we have at least multiple measurements\n\t\tif (this.measurements < 10) {\n\t\t\treturn {estimate: 0, x: 0, y: 0, varX: 1, varY: 1};\n\t\t}\n\n\t\tconst {varX, varY} = this._particleVariance();\n\n\t\t//@todo Make this constraint configurable\n\t\tif (varX < 8 && varY < 8) {\n\n\t\t\t//Compute a weighted average of the particles\n\t\t\tconst {x, y} = this.averagePosition();\n\n\t\t\treturn {\n\t\t\t\testimate: 1,\n\t\t\t\tx, y,\n\t\t\t\tvarX, varY\n\t\t\t};\n\t\t}\n\n\t\treturn {estimate: 0, x: 0, y: 0, varX: 1, varY: 1};\n\t}\n\n\t/**\n\t * Return the particle with the heighest weight\n\t * @return {Particle}\n\t */\n\tbestParticle() {\n\t\tlet best = this.particles[0];\n\n\t\tthis.particles.forEach((p) => {\n\t\t\tif (p.weight > best.weight) {\n\t\t\t\tbest = p;\n\t\t\t}\n\t\t});\n\n\t\treturn best;\n\t}\n\n\t/**\n\t * Return a weighted average of this particle set\n\t * @return {Object} x,y\n\t */\n\taveragePosition() {\n\n\t\tconst weights = normalizeWeights(this.particles.map((p) => p.weight));\n\n\t\treturn {\n\t\t\tx: this.particles.reduce((prev, p, i) => prev + (weights[i] * p.x), 0),\n\t\t\ty: this.particles.reduce((prev, p, i) => prev + (weights[i] * p.y), 0)\n\t\t};\n\t}\n\n\t/**\n\t * Return the particle variance in X and Y\n\t * @return {Object} varx, vary\n\t */\n\t_particleVariance() {\n\n\t\treturn {\n\t\t\tvarX: variance(this.particles, (p) => p.x),\n\t\t\tvarY: variance(this.particles, (p) => p.y)\n\t\t};\n\t}\n\n\t/**\n\t * Resample the particle set and return a given number of new particles\n\t * @param  {Number} nSamples Number of particles to return\n\t * @return {Array}\n\t */\n\t_resample(nSamples) {\n\t\tconst weights = this.particles.map(p => p.weight);\n\n\t\treturn lowVarianceSampling(nSamples, weights).map((i) => {\n\t\t\treturn {\n\t\t\t\tx: this.particles[i].x,\n\t\t\t\ty: this.particles[i].y,\n\t\t\t\tweight: 1\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Init the particle set\n\t *\n\t * Creates a set of particles distributed around x,y at a distance\n\t * following a normal distribution with r as mean.\n\t *\n\t * @param  {Number} x Center x\n\t * @param  {Number} y Center y\n\t * @param  {Number} r range\n\t * @return {void}\n\t */\n\t_randomParticles(n, x, y, r) {\n\n\t\tconst deltaTheta = 2 * Math.PI / n;\n\t\tconst particles = [];\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst theta = i * deltaTheta;\n\t\t\tconst range = r + randn(0, this.stdRange);\n\t\t\tconst {dx, dy} = polarToCartesian(range, theta);\n\n\t\t\tparticles.push({x: x + dx, y: y + dy, weight: 1});\n\t\t}\n\n\t\treturn particles;\n\t}\n\n\t/**\n\t * Update each particle by updating their weights\n\t * @param  {Number} x\n\t * @param  {Number} y\n\t * @param  {Number} r\n\t * @return {void}\n\t */\n\t_updateWeights(x, y, r) {\n\n\t\tthis.particles.forEach((p) => {\n\n\t\t\t//Calculate distance estimate\n\t\t\tconst dist = Math.sqrt(Math.pow(p.x - x, 2) + Math.pow(p.y - y, 2));\n\n\t\t\t//What is the probability of r given dist? p(r|dist)\n\t\t\t//Update the weight accordingly\n\t\t\t//p(r) = N(r|dist,sd)\n\n\t\t\tconst weight = pdfn(r, dist, this.stdRange);\n\n\t\t\tp.weight = p.weight * weight;\n\t\t});\n\t}\n}\n\nexport default LandmarkParticleSet;","import Particle from './particle';\nimport LandmarkInitializationSet from './landmark-init-set';\nimport { lowVarianceSampling, numberOfEffectiveParticles, normalizeWeights } from '../util/sampling';\n\nclass ParticleSet {\n\t/**\n\t * Create a new particle set with a given number of particles\n\t * @param  {int} nParticles    \t Number of particles\n\t * @param  {float} options.x     Initial x postion of user\n\t * @param  {float} options.y     Initial y position of user\n\t * @param  {float} options.theta Initial theta of user\n\t * @return ParticleSet\n\t */\n\tconstructor(nParticles, userConfig) {\n\t\tthis.nParticles = nParticles;\n\n\t\tthis.particleList = [];\n\n\t\t//Internal list to keep track of initialised landmarks\n\t\tthis.initialisedLandmarks = [];\n\t\tthis.landmarkInitSet = new LandmarkInitializationSet();\n\n\t\tfor (let i = 0; i < nParticles; i++) {\n\t\t\tthis.particleList.push(new Particle(userConfig));\n\t\t}\n\t}\n\n\t/**\n\t * Given a control, let each particle sample a new user position\n\t * @param  {[type]} control [description]\n\t * @return {ParticleSet}\n\t */\n\tsamplePose(control) {\n\t\tthis.particleList.forEach((p) => p.samplePose(control));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Let each particle process an observation\n\t * @param  {object} obs\n\t * @return {ParticleSet}\n\t */\n\tprocessObservation(obs) {\n\n\t\tif (obs !== {}) {\n\n\t\t\tconst { uid, r, name } = obs;\n\n\t\t\tif (this.initialisedLandmarks.indexOf(uid) == -1) {\n\n\t\t\t\tconst {x: uX, y: uY} = this.userEstimate();\n\n\t\t\t\tthis.landmarkInitSet.addMeasurement(uid, uX, uY, r);\n\n\t\t\t\tconst {estimate, x, y, varX, varY} = this.landmarkInitSet.estimate(uid);\n\n\t\t\t\tif (estimate > 0.6) {\n\n\t\t\t\t\tthis.particleList.forEach((p) => {\n\t\t\t\t\t\tp.addLandmark(obs, {x, y}, {varX, varY});\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.landmarkInitSet.remove(uid);\n\t\t\t\t\tthis.initialisedLandmarks.push(uid);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.particleList.forEach((p) => p.processObservation(obs));\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resample the internal particle list using their weights\n\t *\n\t * Uses a low variance sample\n\t * @return {ParticleSet}\n\t */\n\tresample() {\n\n\t\tconst weights = this.particleList.map(p => p.weight);\n\t\tif (numberOfEffectiveParticles(weights) < (this.nParticles * 0.5)) {\n\n\t\t\tthis.particleList = lowVarianceSampling(this.nParticles, weights).map((i) => {\n\t\t\t\treturn new Particle({}, this.particleList[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get particles\n\t * @return {[Array]\n\t */\n\tparticles() {\n\t\treturn this.particleList;\n\t}\n\n\t/**\n\t * Return the particle with the heighest weight\n\t * @return {Particle}\n\t */\n\tbestParticle() {\n\t\tlet best = this.particleList[0];\n\n\t\tthis.particleList.forEach((p) => {\n\t\t\tif (p.weight > best.weight) {\n\t\t\t\tbest = p;\n\t\t\t}\n\t\t});\n\n\t\treturn best;\n\t}\n\n\t/**\n\t * Compute an average of all landmark estimates\n\t * @return {Map}\n\t */\n\tlandmarkEstimate() {\n\t\tconst weights = normalizeWeights(this.particleList.map((p) => p.weight));\n\n\t\tconst landmarks = new Map();\n\n\t\t//Loop through all particles to get an estimate of the landmarks\n\t\tthis.particleList.forEach((p, i) => {\n\t\t\tp.landmarks.forEach((landmark, uid) => {\n\t\t\t\tif (!landmarks.has(uid)) {\n\t\t\t\t\tlandmarks.set(uid, {\n\t\t\t\t\t\tx: weights[i] * landmark.x,\n\t\t\t\t\t\ty: weights[i] * landmark.y,\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\tname: landmark.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst l = landmarks.get(uid);\n\n\t\t\t\t\tl.x += weights[i] * landmark.x;\n\t\t\t\t\tl.y += weights[i] * landmark.y;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn landmarks;\n\t}\n\n\t/**\n\t * Get the best estimate of the current user position\n\t * @return {object}\n\t */\n\tuserEstimate() {\n\t\tconst weights = normalizeWeights(this.particleList.map((p) => p.weight));\n\n\t\treturn {\n\t\t\tx: this.particleList.reduce((prev, p, i) => prev + (weights[i] * p.user.x), 0),\n\t\t\ty: this.particleList.reduce((prev, p, i) => prev + (weights[i] * p.user.y), 0)\n\t\t};\n\t}\n}\n\nexport default ParticleSet;\n","import User from './user';\nimport { randn, pdfn } from '../util/math';\n\nclass Particle {\n\t/**\n\t * Create a new particle\n\t * @param  {object} userConfig\n\t * @return {Particle}\n\t */\n\tconstructor(userConfig, parent = undefined) {\n\n\t\tif (parent !== undefined) {\n\t\t\tthis.user = User.copyUser(parent.user);\n\t\t\tthis.landmarks = this._copyMap(parent.landmarks);\n\t\t}\n\t\telse {\n\t\t\tthis.user = new User(userConfig.defaultPose, userConfig);\n\t\t\tthis.landmarks = new Map();\n\t\t}\n\n\t\tthis.weight = 1;\n\t}\n\n\t/**\n\t * Given a control, sample a new user position\n\t * @param  {[type]} control [description]\n\t * @return {Particle}\n\t */\n\tsamplePose(control) {\n\n\t\t//Sample a pose from the 'control'\n\t\tthis.user.samplePose(control);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Reset the weight of the particle\n\t * @return {Particle}\n\t */\n\tresetWeight() {\n\t\tthis.weight = 1;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Register a new landmark\n\t * @param {string} options.uid\n\t * @param {float} options.r\n\t * @param {String} options.name\n\t * @param {Number} options.x \tInitial x position\n\t * @param {Number} options.y    Initial y\n\t * @param {Number} options.varX Cov in X direction\n\t * @param {Number} options.varY Cov in Y direction\n\t */\n\taddLandmark({uid, r, name}, {x, y}, {varX, varY} = {varX: 1, varY: 1}) {\n\n\t\tconst landmark = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tname: name,\n\t\t\tcov: [[varX, 0], [0, varY]]\n\t\t};\n\n\t\tthis.landmarks.set(uid, landmark);\n\t}\n\n\t/**\n\t * Update a landmark using the EKF update rule\n\t * @param  {string} options.uid landmark id\n\t * @param  {float} options.r    range measurement\n\t * @return {void}\n\t */\n\tprocessObservation({uid, r}) {\n\n\t\t//Find the correct EKF\n\t\tconst l = this.landmarks.get(uid);\n\n\t\t//Compute the difference between the predicted user position of this\n\t\t//particle and the predicted position of the landmark.\n\t\tconst dx = this.user.x - l.x;\n\t\tconst dy = this.user.y - l.y;\n\n\t\t//@todo find better values for default coviarance\n\t\tconst errorCov = randn(2, 0.1);\n\n\t\tconst dist = Math.max(0.001, Math.sqrt((dx * dx) + (dy * dy)));\n\n\t\t//Compute innovation: difference between the observation and the predicted value\n\t\tconst v = r - dist;\n\n\t\t//Compute Jacobian\n\t\tconst H = [-dx / dist, -dy / dist];\n\n\t\t//Compute covariance of the innovation\n\t\t//covV = H * Cov_s * H^T + error\n\t\tconst HxCov = [l.cov[0][0] * H[0] + l.cov[0][1] * H[1],\n\t\t\t\t\t\tl.cov[1][0] * H[0] + l.cov[1][1] * H[1]];\n\n\t\tconst covV = (HxCov[0] * H[0]) + (HxCov[1] * H[1]) + errorCov;\n\n\t\t//Kalman gain\n\t\tconst K = [HxCov[0] * (1 / covV), HxCov[1] * (1.0 / covV)];\n\n\t\t//Calculate the new position of the landmark\n\t\tconst newX = l.x + (K[0] * v);\n\t\tconst newY = l.y + (K[1] * v);\n\n\t\t//Calculate the new covariance\n\t\t//cov_t = cov_t-1 - K * covV * K^T\n\t\tconst updateCov = [\n\t\t\t[K[0] * K[0] * covV, K[0] * K[1] * covV],\n\t\t\t[K[1] * K[0] * covV, K[1] * K[1] * covV]\n\t\t];\n\n\t\tconst newCov = [[l.cov[0][0] - updateCov[0][0], l.cov[0][1] - updateCov[0][1]],\n\t\t\t\t\t\t[l.cov[1][0] - updateCov[1][0], l.cov[1][1] - updateCov[1][1]]];\n\n\t\t//Update the weight of the particle\n\t\t//this.weight = this.weight - (v * (1.0 / covV) * v);\n\t\tthis.weight = this.weight * pdfn(r, dist, covV);\n\n\t\t//Update particle\n\t\tl.x = newX;\n\t\tl.y = newY;\n\t\tl.cov = newCov;\n\t}\n\n\t/**\n\t * Deep copy a mpa\n\t * @param  {Map} map\n\t * @return {Map}\n\t */\n\t_copyMap(map) {\n\t\tconst copy = new Map();\n\n\t\tfor (let [key, value] of map.entries()) {\n\t\t\tcopy.set(key, this._copyLandmark(value));\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Deep copy a landmark\n\t * @param  {object} landmark\n\t * @return {landmark}\n\t */\n\t_copyLandmark(landmark) {\n\t\tlet copy = {};\n\n\t\tcopy.x = landmark.x;\n\t\tcopy.y = landmark.y;\n\t\tcopy.name = landmark.name;\n\t\tcopy.cov = [...landmark.cov];\n\n\t\treturn copy;\n\t}\n}\n\nexport default Particle;\n","import KalmanFilter from '../util/kalman';\n\nclass Sensor {\n\n\t/**\n\t * Sensor\n\t * @param  {int} options.n\n\t * @param  {int} options.txPower\n\t * @param  {int} options.noise\n\t * @param  {int} options.range\n\t * @param  {Number} options.R       Process noise\n\t * @param  {Number} options.Q       Measurement noise\n\t * @param  {Number} minMeasurements Minimum amount of measurements before we return a rssi value\n\t * @return {Sensor}\n\t */\n\tconstructor({n, txPower, noise, range}, {R = 0.008, Q = undefined} = {}, minMeasurements = 10) {\n\n\t\tthis.landmarks = new Map();\n\t\tthis.landmarkConfig = {n, txPower, noise, range};\n\n\t\tif (Q === undefined) {\n\t\t\tQ = noise;\n\t\t}\n\n\t\tthis.R = R;\n\t\tthis.Q = Q;\n\n\t\tthis.minMeasurements = minMeasurements;\n\t}\n\n\t/**\n\t * Process a new observation\n\t * @param {String} uid\n\t * @param {Number} rssi\n\t * @param {String} name\n\t */\n\taddObservation(uid, rssi, name) {\n\n\t\t//Check whether the rssi value is valid\n\t\tif(rssi > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.landmarks.has(uid)) {\n\t\t\tthis._updateLandmark(uid, rssi);\n\t\t}\n\t\telse {\n\t\t\tthis._registerLandmark(uid, rssi, name);\n\t\t}\n\t}\n\n\t/**\n\t * Get all observations since the last request\n\t *\n\t * @return {Array}\n\t */\n\tgetObservations() {\n\t\tconst observedLandmarks = [];\n\n\t\t//Get all the landmarks that have been upated during the current iteration\n\t\tthis.landmarks.forEach((l, uid) => {\n\t\t\tif (l.changed && l.measurements > this.minMeasurements) {\n\t\t\t\tconst rssi = l.filter.lastMeasurement();\n\n\t\t\t\tobservedLandmarks.push({uid, r: this._rssiToDistance(rssi), name: l.name});\n\t\t\t}\n\n\t\t\tl.changed = false;\n\t\t});\n\n\t\treturn observedLandmarks;\n\t}\n\n\t/**\n\t * Update a landmark given a new rssi observation\n\t * @param  {float} uid\n\t * @param  {float} rssi\n\t * @return {void}\n\t */\n\t_updateLandmark(uid, rssi) {\n\n\t\tconst landmark = this.landmarks.get(uid);\n\n\t\tlandmark.filter.filter(rssi);\n\t\tlandmark.measurements++;\n\t\tlandmark.changed = true;\n\t}\n\n\t/**\n\t * Add a new landmark to the interal list\n\t * @param  {string} uid  Landanme uid\n\t * @param  {float} rssi  Current RSSI value\n\t * @return {void}\n\t */\n\t_registerLandmark(uid, rssi, name) {\n\n\t\tconsole.log('[SLACjs/sensor] New landmark found with uid ' + uid + ' and name ' + name);\n\n\t\tconst filter = new KalmanFilter({R: this.R, Q: this.Q});\n\t\tfilter.filter(rssi);\n\n\t\tthis.landmarks.set(uid, {\n\t\t\tuid,\n\t\t\tchanged: true,\n\t\t\tname,\n\t\t\tfilter,\n\t\t\tmeasurements: 1\n\t\t});\n\t}\n\n\t/**\n\t * Convert RSSI to a distance estimate\n\t * @param  {float} rssi\n\t * @return {float}\n\t */\n\t_rssiToDistance(rssi) {\n\t\treturn Math.pow(10, (rssi - this.landmarkConfig.txPower) / (-10 * this.landmarkConfig.n));\n\t}\n}\n\nexport default Sensor;\n","import { polarToCartesian, meanHeading, limitTheta } from '../util/motion';\nimport { randn } from '../util/math';\nimport LinkedList from '../util/linked-list';\n\nclass User {\n\t/**\n\t * Create a new user\n\t * @param  {float} options.x     Starting x location of the user\n\t * @param  {float} options.y     Starting y location of the user\n\t * @param  {float} options.theta Direction of the user in radials relative to the x-axis\n\t * @param  {object} userConfig\n\t * @param  {LinkedList} trace \t Optional trace to extend\n\t * @return {User}\n\t */\n\tconstructor({x, y, theta}, userConfig, trace = undefined) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.theta = theta;\n\t\tthis.userConfig = userConfig;\n\n\t\tthis.previousOdometry = {x, y, theta};\n\n\t\tif (trace === undefined) {\n\t\t\tthis.trace = new LinkedList().add({x, y, theta});\n\t\t}\n\t\telse {\n\t\t\t//We use a LinkedList here to make use of the reference to the\n\t\t\t//trace instead of copying the whole list\n\t\t\tthis.trace = new LinkedList(trace);\n\t\t}\n\t}\n\n\t/**\n\t * Move a user to a new position\n\t * @param  {float} r\n\t * @param  {float} theta\n\t * @return {User}\n\t */\n\tmove({r, theta}) {\n\n\t\tconst {dx, dy} = polarToCartesian(r, theta);\n\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.theta = theta;\n\n\t\tthis.trace.add({x: this.x, y: this.y, theta: this.theta});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Move the user to a specific position using a sampling function\n\t * @param  {Number} x\n\t * @param  {Number} y\n\t * @param  {Number} theta\n\t * @return {User}\n\t */\n\tsamplePose({r, theta}) {\n\n\t\tconst sdHeading = this.userConfig.sdHeading;\n\n\t\tconst sampledHeading = limitTheta(randn(theta, sdHeading));\n\n\t\t//Comput the deviation of the noise of the step size\n\t\t//@todo Base the deviation of the steps on the pedometer\n\t\tconst sdStep = this.userConfig.sdStep;\n\n\t\tconst sampledR = randn(r, sdStep);\n\n\t\t//Use odometry to find a new position\n\t\tconst {dx, dy} = polarToCartesian(sampledR, sampledHeading);\n\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t\tthis.theta = sampledHeading;\n\n\t\tthis.trace.add({x: this.x, y: this.y, theta: this.theta});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Safely copy a user object\n\t * @param  {User} user User to copy\n\t * @return {User}\n\t */\n\tstatic copyUser(user) {\n\t\treturn new User({\n\t\t\tx: user.x,\n\t\t\ty: user.y,\n\t\t\ttheta: user.theta\n\t\t}, user.userConfig, user.trace);\n\t}\n}\n\nexport default User;\n","class VoteAccumulator {\n\n\t/**\n\t * Create new voting system\n\t * @param  {Number} dimension Size of the voting matrix coordinate system\n\t * @param  {Number} precision Defines amount of cells by dimension/precision\n\t * @param  {Number} startX    Center of the voting matrix\n\t * @param  {Number} startY    Center of the voting matrix\n\t * @return {VoteAccumulator}\n\t */\n\tconstructor(dimension, precision, startX = 0, startY = 0) {\n\t\tthis.dimension = dimension;\n\t\tthis.precision = precision;\n\t\tthis.centerX = startX;\n\t\tthis.centerY = startY;\n\n\t\tthis.measurements = 0;\n\t\tthis.size = Math.round(dimension / precision);\n\n\t\tthis.votes = new Array(this.size).fill(0).map(() => new Array(this.size).fill(0));\n\t}\n\n\taddMeasurement(x, y, r) {\n\n\t\tthis.measurements++;\n\n\t\tx = x - this.centerX;\n\t\ty = y - this.centerY;\n\n\t\tif (!this._inRange(x, y)) {\n\t\t\tconsole.error('Coordinates not in range of VoteAccumulator internal cell matrix ' +\n\t\t\t\t\t\t\t`with x:${x}, y:${y} and centerX:${this.centerX}, centerY:${this.centerY}.`);\n\t\t}\n\n\t\tif (!this._inRange(x + r, y) || !this._inRange(x, y + r)) {\n\t\t\tconsole.error('Range measurement not in range of VoteAccumulator internal cell matrix.');\n\t\t}\n\n\t\t//Get the current center\n\t\tconst {row, column} = this._cartesianToCell(x, y);\n\n\t\t//Convert the range to cell distance\n\t\tconst dist = Math.round(r / this.precision);\n\n\t\t//Add votes according to midpoint circle algorithm\n\t\tthis._midpointCircle(row, column, dist);\n\n\t\treturn this;\n\t}\n\n\tpositionEstimate() {\n\t\tif (this.measurements < 3) {\n\t\t\treturn {estimate: 0, x: 0, y: 0};\n\t\t}\n\n\t\tlet firstValue = 0;\n\t\tlet firstCell = {};\n\t\tlet secondValue = 0;\n\t\tlet secondCell = {};\n\n\t\tfor (let row = 0; row < this.size; row++) {\n\t\t\tfor (let column = 0; column < this.size; column++) {\n\t\t\t\tif (this.votes[row][column] > firstValue) {\n\t\t\t\t\tfirstValue = this.votes[row][column];\n\t\t\t\t\tfirstCell = {row, column};\n\t\t\t\t}\n\t\t\t\telse if (this.votes[row][column] > secondValue) {\n\t\t\t\t\tsecondValue = this.votes[row][column];\n\t\t\t\t\tsecondCell = {row, column};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst {x, y} = this._cellToCartesian(firstCell.row, firstCell. column);\n\n\t\treturn {\n\t\t\testimate: (firstValue / (firstValue + secondValue)),\n\t\t\tx, y\n\t\t};\n\t}\n\n\t/**\n\t * Return a string representation of the vote matrix\n\t * @return {String}\n\t */\n\ttoString() {\n\t\treturn this.votes.reduce((output, row) => {\n\t\t\treturn output + row.reduce((rowOutput, cell) => {\n\t\t\t\tif (cell > 9) {\n\t\t\t\t\treturn rowOutput + cell + ' ';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn rowOutput + cell + '  ';\n\t\t\t\t}\n\t\t\t}) + '\\n';\n\t\t}, '\\n');\n\t}\n\n\t/**\n\t * Return true when an cartesian coordinate is in range\n\t * @param  {Number} x\n\t * @param  {Number} y\n\t * @return {Boolean}\n\t */\n\t_inRange(x, y) {\n\t\treturn (\n\t\t\t\tx >= (-0.5 * this.dimension) &&\n\t\t\t\tx <= (0.5 * this.dimension) &&\n\t\t\t\ty >= (-0.5 * this.dimension) &&\n\t\t\t\ty <= (0.5 * this.dimension)\n\t\t);\n\t}\n\n\t/**\n\t * Place votes based on the midpoint circle algorithm\n\t * @param  {Number} row    Center\n\t * @param  {Number} column Center\n\t * @param  {Number} r      Radius\n\t * @return {void}\n\t */\n\t_midpointCircle(row, column, r) {\n\n\t\tlet x = r;\n\t\tlet y = 0;\n\t\tlet radiusError = 1 - x;\n\n\t\twhile (x >= y) {\n\t\t\tthis._vote(y + row,  x + column);\n\t\t\tthis._vote(y + row, -x + column);\n\t\t\tthis._vote(-y + row, -x + column);\n\t\t\tthis._vote(-y + row,  x + column);\n\n\t\t\tif (x != y) {\n\t\t\t\tthis._vote(x + row,  y + column);\n\t\t\t\tthis._vote(x + row, -y + column);\n\t\t\t\tthis._vote(-x + row, -y + column);\n\t\t\t\tthis._vote(-x + row,  y + column);\n\t\t\t}\n\n\t\t\ty++;\n\n\t\t\tif (radiusError < 0) {\n\t\t\t\tradiusError += 2 * y + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx--;\n\t\t\t\tradiusError += 2 * (y - x) + 1;\n\t\t\t}\n\t\t}\n\n\t\t//At the ends of the cross, we have double votes, substract these\n\t\tthis._vote(row + r, column, -1);\n\t\tthis._vote(row - r, column, -1);\n\t\tthis._vote(row, column + r, -1);\n\t\tthis._vote(row, column - r, -1);\n\t}\n\n\t/**\n\t * Increase votes at a specific cell\n\t * @param  {Number} row\n\t * @param  {Number} column\n\t * @return {void}\n\t */\n\t_vote(row, column, value = 1) {\n\n\t\tif (row >= this.size || column >= this.size || row < 0 || column < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.votes[row][column] +=  value;\n\n\t\t/*if (row > 0) {\n\t\t\tthis.votes[row - 1][column] += value;\n\n\t\t\tif (column > 0) {\n\t\t\t\tthis.votes[row - 1][column - 1] += value;\n\t\t\t}\n\t\t\tif (column < (this.size - 1)) {\n\t\t\t\tthis.votes[row - 1][column + 1] += value;\n\t\t\t}\n\t\t}\n\n\t\tif (row < (this.size - 1)) {\n\t\t\tthis.votes[row + 1][column] += value;\n\n\t\t\tif (column > 0) {\n\t\t\t\tthis.votes[row + 1][column - 1] += value;\n\t\t\t}\n\t\t\tif (column < (this.size - 1)) {\n\t\t\t\tthis.votes[row + 1][column + 1] += value;\n\t\t\t}\n\t\t}\n\n\t\tif (column > 0) {\n\t\t\tthis.votes[row][column - 1] += value;\n\t\t}\n\n\t\tif (column < (this.size - 1)) {\n\t\t\tthis.votes[row][column + 1] += value;\n\t\t}*/\n\t}\n\n\t/**\n\t * Convert a cartesian coordinate to a specific cell\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {object}\n\t */\n\t_cartesianToCell(x, y) {\n\t\treturn {\n\t\t\tcolumn: Math.floor((x + (0.5 * this.dimension)) / this.precision),\n\t\t\trow: Math.floor((y + (0.5 * this.dimension)) / this.precision)\n\t\t};\n\t}\n\n\t/**\n\t * Convert a cell to cartesian coordinates\n\t * @param  {int} row\n\t * @param  {int} column\n\t * @return {object}\n\t */\n\t_cellToCartesian(row, column) {\n\t\treturn {\n\t\t\tx: ((column + 0.5) * this.precision) - (0.5 * this.dimension),\n\t\t\ty: ((row + 0.5) * this.precision) - (0.5 * this.dimension)\n\t\t};\n\t}\n}\n\nexport default VoteAccumulator;","import { log, randn } from '../util/math';\n\nexport class SimulatedLandmarkSet {\n\n\t/**\n\t * Create simulated landmarks\n\t * @param  {Number} N              Amount of landmarks\n\t * @param  {Number} options.xRange Max x\n\t * @param  {Number} options.yRange Max y\n\t * @param  {Number} updateRate     Refresh rate\n\t * @param  {Object} landmarkConfig Landmark config\n\t * @return {SimulatedLandmarkSet}\n\t */\n\tconstructor(N, {xRange, yRange}, updateRate, landmarkConfig) {\n\t\tthis.landmarks = [];\n\t\tthis.xRange = xRange;\n\t\tthis.yRange = yRange;\n\t\tthis.updateRate = updateRate;\n\t\tthis.landmarkConfig = landmarkConfig;\n\t\tthis.broadcastId = undefined;\n\n\t\tfor (let i = 0; i < N; i++) {\n\t\t\tthis.landmarks.push(this._randomLandmark('landmark-' + i));\n\t\t}\n\t}\n\n\t/**\n\t * Start broadcasting landmark data\n\t * @param  {Sensor} sensor\n\t * @param  {User} user\n\t * @return {void}\n\t */\n\tstartBroadcast(sensor, user) {\n\t\tthis.broadcastId = window.setTimeout(() => this._broadCast(sensor, user), this.updateRate);\n\t}\n\n\t/**\n\t * Stop broadcast of landmark data\n\t * @return {void}\n\t */\n\tstopBroadCast() {\n\t\tif (this.broadcastId !== undefined) {\n\t\t\twindow.clearTimeout(this.broadcastId);\n\t\t}\n\t}\n\n\t/**\n\t * Set the update rate of the landmarks\n\t * @param {float} updateRate\n\t * @return {SimulatedLandmarkSet}\n\t */\n\tsetUpdateRate(updateRate) {\n\t\tthis.updateRate = updateRate;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Simulate RSSI measurements for all landmarks in range\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {Array}\n\t */\n\tmeasurementsAtPoint(x, y) {\n\t\tconst landmarks = this.landmarksInRange(x, y);\n\t\tconst measurements = [];\n\n\t\treturn landmarks.forEach((l) => measurements.push({uid: l.uid, rssi: l.rssiAt(x, y), name: l.name}));\n\t}\n\n\t/**\n\t * Get a random measurement from a device in range\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {object}\n\t */\n\trandomMeasurementAtPoint(x, y) {\n\t\tconst landmarks = this.landmarksInRange(x, y);\n\n\t\tif (landmarks.length > 0) {\n\t\t\tconst landmark = landmarks[Math.floor(Math.random() * landmarks.length)];\n\n\t\t\treturn {uid: landmark.uid, rssi: landmark.rssiAt(x, y), name: landmark.name};\n\t\t}\n\t}\n\n\t/**\n\t * Return all landmarks within range of a given x,y position\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {Array}\n\t */\n\tlandmarksInRange(x, y) {\n\t\treturn this.landmarks.filter((l) => l.isInRange(x, y));\n\t}\n\n\t/**\n\t * Create a landmark at a random position\n\t * @param  {string} uid UID\n\t * @return {Landmark}\n\t */\n\t_randomLandmark(uid) {\n\t\treturn new Landmark(uid, {\n\t\t\tx: Math.random() * (2 * this.xRange) - this.xRange,\n\t\t\ty: Math.random() * (2 * this.yRange) - this.yRange\n\t\t}, this.landmarkConfig);\n\t}\n\n\t/**\n\t * Simulate a broadcast\n\t *\n\t * Sets a timeout to run this function again after a fixed amount of time\n\t * @param  {Sensor} sensor\n\t * @param  {User} user\n\t * @return {void}\n\t */\n\t_broadCast(sensor, user) {\n\n\t\tconst measurement = this.randomMeasurementAtPoint(user.x, user.y);\n\n\t\tif (measurement !== undefined) {\n\t\t\tsensor.addObservation(measurement);\n\t\t}\n\n\t\tthis.broadcastId = window.setTimeout(() => this._broadCast(sensor, user), this.updateRate);\n\t}\n\n\t/**\n\t * Get a landmark by its uid\n\t * @param  {string} uid\n\t * @return {Landmark}\n\t */\n\tlandmarkByUid(uid) {\n\t\tfor (let i = 0; i < this.landmarks.length; i++) {\n\t\t\tif (this.landmarks[i].uid == uid) {\n\t\t\t\treturn this.landmarks[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default SimulatedLandmarkSet;\n\nclass Landmark {\n\t/**\n\t * Landmark\n\t * @param  {string} uid             UID of the landmark\n\t * @param  {float} options.x        Current x position\n\t * @param  {float} options.y        Current y position\n\t * @param  {int} options.n          Path loss exponent\n\t * @param  {int} options.txPower    Transmit power\n\t * @param  {float} options.noise    Noise level\n\t * @param  {int} options.range      Range\n\t * @return {Landmark}\n\t */\n\tconstructor(uid, {x, y}, {n, txPower, noise, range}) {\n\t\tthis.uid = uid;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.landmarkRange = range;\n\t\tthis.n = n;\n\t\tthis.txPower = txPower;\n\t\tthis.noise = noise;\n\t\tthis.name = uid;\n\t}\n\n\t/**\n\t * Returns true when a point x,y is in range\n\t * @param  {float}  x\n\t * @param  {float}  y\n\t * @return {Boolean}\n\t */\n\tisInRange(x, y) {\n\t\treturn this.distanceTo(x, y) <= this.landmarkRange;\n\t}\n\n\t/**\n\t * Distance from this landmark to a x,y point\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {float}\n\t */\n\tdistanceTo(x, y) {\n\t\treturn Math.sqrt(Math.pow(this.x - x, 2) + Math.pow(this.y - y, 2));\n\t}\n\n\t/**\n\t * RSSI value without noise at x,y point\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {float} RSSI value\n\t */\n\trssiAtRaw(x, y) {\n\t\treturn this.txPower - ((10 * this.n) *  log(Math.max(this.distanceTo(x, y), 0.1), 10));\n\t}\n\n\t/**\n\t * RSSI with noise at x,y point\n\t * @param  {float} x\n\t * @param  {float} y\n\t * @return {float}\n\t */\n\trssiAt(x, y) {\n\t\treturn this.rssiAtRaw(x, y) + randn(0, this.noise);\n\t}\n}\n\nexport default Landmark;\n\n/**\n * Convert RSSI to distance\n * @param  {float} rssi\n * @param  {object} landmarkConfig Should at least contain a txPower and n field\n * @return {float}\n */\nexport function rssiToDistance(rssi, landmarkConfig) {\n\treturn Math.pow(10, (rssi - landmarkConfig.txPower) / (-10 * landmarkConfig.n));\n}\n","import ParticleSet from './models/particle-set';\nimport Sensor from './models/sensor';\nimport Pedometer from './device/pedometer';\n\nclass SlacController {\n\n\t/**\n\t * Main controller for SLAC\n\t * @param  {Number} nParticles       Number of particles\n\t * @param  {Object} defaultPose      Starting pose of particles\n\t * @param  {Object} landmarkConfig   Landmark configuration\n\t * @param  {Number} motionUpdateRate Motion update frequency\n\t * @param  {Number} stepSize\n\t * @return {SlacController}\n\t */\n\tconstructor(config) {\n\n\t\t//Initialize a new particle set at 'defaultPose'\n\t\tthis.particleSet = new ParticleSet(config.particles.N, config.particles.user);\n\n\t\t//Create a new sensor that tracks signal strengths\n\t\tthis.sensor = new Sensor(config.landmarkConfig, config.sensor.rssi.kalman, config.sensor.rssi.minMeasurements);\n\n\t\t//Create new pedometer to count steps\n\t\tthis.pedometer = new Pedometer(config.sensor.motion.frequency);\n\t\tthis.pedometer.onStep(() => this._update());\n\n\t\t//Create a local copy of the current heading\n\t\tthis.heading = config.particles.user.defaultPose.theta;\n\n\t\t//Step size of a single step in meters\n\t\tthis.stepSize = config.pedometer.stepSize;\n\n\t\tthis.started = false;\n\t\tthis.callback = undefined;\n\t\tthis.lastObservations = [];\n\t}\n\n\t/**\n\t * Start the controller\n\t * @return {SlacController}\n\t */\n\tstart() {\n\t\tthis.started = true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the controller\n\t * @return {SlacController}\n\t */\n\tpause() {\n\t\tthis.started = false;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Process a new motion event\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} z\n\t */\n\taddMotionObservation(x, y, z, heading) {\n\n\t\t//Update the pedometer\n\t\tthis.pedometer.processMeasurement(x, y, z);\n\n\t\tthis.heading = heading;this.dist = 0;\n\t}\n\n\t/**\n\t * Register a new device observation\n\t * @param {String} uid\n\t * @param {Number} rssi\n\t * @param {String} name\n\t */\n\taddDeviceObservation(uid, rssi, name) {\n\n\t\t//Add the device observation to the sensor for filtering\n\t\tthis.sensor.addObservation(uid, rssi, name);\n\t}\n\n\t/**\n\t * Add a callback function that is run on every update\n\t *\n\t * The callback receives the particle set on each call.\n\t * @param  {Function} callback\n\t * @return {void}\n\t */\n\tonUpdate(callback) {\n\t\tthis.callback = callback;\n\t}\n\n\t/**\n\t * Run the full SLAM update\n\t * @return {void}\n\t */\n\t_update() {\n\n\t\tif(!this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log('[SLACjs/controller] Update running');\n\n\t\t//@todo Check for the amount of steps here\n\t\tconst dist = 1 * this.stepSize;\n\t\tconst heading = this.heading;\n\n\t\t//Sample a new pose for each particle in the set\n\t\tthis.particleSet.samplePose({r: dist, theta: heading});\n\n\t\t//Let each particle process the observations\n\t\tthis.lastObservations = this.sensor.getObservations();\n\n\t\tthis.lastObservations.forEach((obs) => {\n\t\t\tthis.particleSet.processObservation(obs)\n\t\t});\n\n\t\t//Resample, this is not done on every iteration and the\n\t\t//particle set determines whether a resmample is required\n\t\tthis.particleSet.resample();\n\n\t\tif(this.callback !== undefined) {\n\t\t\tthis.callback(this.particleSet);\n\t\t}\n\t}\n\n}\n\nexport default SlacController;\n","class KalmanFilter {\n\n\t/**\n\t * Create 1-dimensional kalman filter\n\t * @param  {Number} options.R Process noise\n\t * @param  {Number} options.Q Measurement noise\n\t * @param  {Number} options.A State vector\n\t * @param  {Number} options.B Control vector\n\t * @param  {Number} options.C Measurement vector\n\t * @return {KalmanFilter}\n\t */\n\tconstructor({R = 1, Q = 1, A = 1, B = 0, C = 1} = {}) {\n\n\t\tthis.R = R; // noise power desirable\n\t\tthis.Q = Q; // noise power estimated\n\n\t\tthis.A = A;\n\t\tthis.C = C;\n\t\tthis.B = B;\n\t\tthis.cov = NaN;\n\t\tthis.x = NaN; // estimated signal without noise\n\t}\n\n\t/**\n\t * Filter a new value\n\t * @param  {Number} z Measurement\n\t * @param  {Number} u Control\n\t * @return {Number}\n\t */\n\tfilter(z, u = 0) {\n\n\t\tif (isNaN(this.x)) {\n\t\t\tthis.x = (1 / this.C) * z;\n\t\t\tthis.cov = (1 / this.C) * this.Q * (1 / this.C);\n\t\t}\n\t\telse {\n\n\t\t\t//Compute prediction\n\t\t\tconst predX = (this.A * this.x) + (this.B * u);\n\t\t\tconst predCov = ((this.A * this.cov) * this.A) + this.R;\n\n\t\t\t//Kalman gain\n\t\t\tconst K = predCov * this.C * (1 / ((this.C * predCov * this.C) + this.Q));\n\n\t\t\t//Correction\n\t\t\tthis.x = predX + K * (z - (this.C * predX));\n\t\t\tthis.cov = predCov - (K * this.C * predCov);\n\t\t}\n\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * Return the last filtered measurement\n\t * @return {Number}\n\t */\n\tlastMeasurement() {\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * Set measurement noise Q\n\t * @param {Number} noise\n\t */\n\tsetMeasurementNoise(noise) {\n\t\tthis.Q = noise;\n\t}\n\n\t/**\n\t * Set the process noise R\n\t * @param {Number} noise\n\t */\n\tsetProcessNoise(noise) {\n\t\tthis.R = noise;\n\t}\n}\n\nexport default KalmanFilter;","class LinkedList {\n\t/**\n\t * Create a new linked linst\n\t * @param  {LinkedList} base The previous link\n\t * @return LinkedList\n\t */\n\tconstructor(base = undefined) {\n\t\tif (base !== undefined && typeof base != 'object') {\n\t\t\tconsole.error('Base must be a LinkedList');\n\t\t}\n\n\t\tthis.list = [base];\n\t}\n\n\tadd(element) {\n\t\tthis.list.push(element);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return a flat array of the linked list\n\t * @return {Array}\n\t */\n\tvalues() {\n\t\tlet values = [];\n\n\t\t//First element of the list is another list or undefined\n\t\tif (this.list[0] !== undefined) {\n\t\t\tvalues = this.list[0].values();\n\t\t}\n\n\t\tvalues = values.concat(this.list.slice(1));\n\n\t\treturn values;\n\t}\n\n\t/**\n\t * Only return the elements of this list and not of its parents\n\t * @return {Array}\n\t */\n\tcurrentValues() {\n\t\treturn this.list.slice(1);\n\t}\n\n\t/**\n\t * Return true when this parent has a parent list\n\t * @return {Boolean}\n\t */\n\thasParent() {\n\t\treturn this.list[0] !== undefined;\n\t}\n\n\t/**\n\t * Return the last object in the list\n\t * @return {mixed}\n\t */\n\tlast() {\n\t\treturn this.list[this.list.length - 1];\n\t}\n\n\t/**\n\t * Return the base of this linked list\n\t * @return {undefined|LinkedList}\n\t */\n\tgetBase() {\n\t\treturn this.list[0];\n\t}\n}\n\nexport default LinkedList;","/**\n * Random following normal distribution\n * @param  {float} mean mean\n * @param  {float} sd   standard deviation\n * @return {float}\n */\nexport function randn(mean, sd) {\n\n\t//Retrieved from jStat\n\tlet u;\n\tlet v;\n\tlet x;\n\tlet y;\n\tlet q;\n\n\tdo {\n\t\tu = Math.random();\n\t\tv = 1.7156 * (Math.random() - 0.5);\n\t\tx = u - 0.449871;\n\t\ty = Math.abs(v) + 0.386595;\n\t\tq = x * x + y * (0.19600 * y - 0.25472 * x);\n\t} while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n\n\treturn (v / u) * sd + mean;\n}\n\n/**\n * pdf for a normal distribution\n * @param  {Number} x\n * @param  {Number} mean\n * @param  {Number} sd\n * @return {Number}\n */\nexport function pdfn(x, mean, sd) {\n\treturn (1 / (sd * Math.sqrt(2 * Math.PI))) * Math.exp(-(Math.pow(x - mean, 2)) / (2 * sd * sd));\n}\n\n/**\n * Compute the log with a given base\n *\n * Used primarily as log10 is not implemented yet on mobile browsers\n * @param  {int}\n * @param  {int}\n * @return {float}\n */\nexport function log(x, base) {\n\treturn Math.log(x) / Math.log(base);\n}\n\n/**\n * Calculates two eigenvalues and eigenvectors from a 2x2 covariance matrix\n * @param  {Array} cov\n * @return {object}\n */\nexport function eigenvv(cov) {\n\n\tconst a = cov[0][0];\n\tconst b = cov[0][1];\n\tconst c = cov[1][0];\n\tconst d = cov[1][1];\n\n\tconst A = 1;\n\tconst B = -(a + d);\n\n\t//const C = (a * d) - (c * b);\n\n\tconst L1 = (-B + Math.sqrt((Math.pow(a - d, 2) + (4 * c * d))) / 2 * A);\n\tconst L2 = (-B - Math.sqrt((Math.pow(a - d, 2) + (4 * c * d))) / 2 * A);\n\n\tconst y1 = (L1 - a) / b;\n\tconst y2 = (L2 - a) / b;\n\tconst mag1 = Math.sqrt(1 + (y1 * y1));\n\tconst mag2 = Math.sqrt(1 + (y2 * y2));\n\n\treturn {\n\t\tvalues: [L1, L2],\n\t\tvectors: [[1 / mag1, y1 / mag1], [1 / mag2, y2 / mag2]]\n\t};\n}\n\n/**\n * Calculate the variance of an array given a value function\n * @param  {Array} data\n * @param  {Function} valueFunc Function that maps an array element to a number\n * @return {Number}\n */\nexport function variance(data, valueFunc) {\n\n\tlet sum = 0;\n\tlet sumSq = 0;\n\tconst n = data.length;\n\n\tdata.forEach((d) => {\n\n\t\tconst value = valueFunc(d);\n\n\t\tsum += value;\n\t\tsumSq += (value * value);\n\t});\n\n\treturn (sumSq - ((sum * sum) / n)) / n;\n}","/**\n * Convert an angle in degrees to a radian angle and substract the base\n *\n * Base corresponds to theta=0. Degrees are converted from CW to CWW.\n *\n * @param  {Number} heading Angle in degrees\n * @param  {Number} base Base angle in degrees\n * @return {Number} between -pi and pi\n */\nexport function degreeToNormalisedHeading(heading, base) {\n\n\tlet diff = heading - base;\n\n\tif (diff < 0) {\n\t\tdiff += 360;\n\t}\n\telse if (diff > 360) {\n\t\tdiff -= 360;\n\t}\n\n\treturn limitTheta(degreeToRadian(clockwiseToCounterClockwise(diff)));\n}\n\n/**\n * Add two radials, keeps the result within [-pi, pi]\n * @param {float} t1\n * @param {float} t2\n * @return {float} Sum of t1 and t2\n */\nexport function addTheta(t1, t2) {\n\tconsole.error('Function is deprecated, use limitTheta instead.');\n\n\tlet theta = t1 + t2;\n\n\tif (theta > Math.PI) {\n\t\treturn Math.PI - theta;\n\t}\n\telse if (theta < -Math.PI) {\n\t\treturn -Math.PI - theta;\n\t}\n\n\treturn theta;\n}\n\n/**\n * Make sure theta remains between [-pi, pi]\n * @param  {Number} theta\n * @return {Number}\n */\nexport function limitTheta(theta) {\n\n\tif (theta > Math.PI) {\n\t\treturn theta - (Math.PI * 2);\n\t}\n\telse if (theta < -Math.PI) {\n\t\treturn theta + (Math.PI * 2);\n\t}\n\n\treturn theta;\n}\n\n/**\n * Compute the average heading between two angles\n * @param  {Number} theta1\n * @param  {Number} theta2\n * @return {Number}\n * @see https://en.wikipedia.org/wiki/Mean_of_circular_quantities\n */\nexport function meanHeading(theta1, theta2) {\n\n\tconst oldTheta1 = theta1;\n\tconst oldTheta2 = theta2;\n\n\tif (theta1 < 0) {\n\t\ttheta1 += 2 * Math.PI;\n\t}\n\tif (theta2 < 0) {\n\t\ttheta2 += 2 * Math.PI;\n\t}\n\n\tconst {dx: x1, dy: y1} = polarToCartesian(1, theta1);\n\tconst {dx: x2, dy: y2} = polarToCartesian(1, theta2);\n\n\tconst avgX = (x1 + x2) / 2;\n\tconst avgY = (y1 + y2) / 2;\n\n\tconst {theta: heading} = cartesianToPolar(avgX, avgY);\n\n\tconsole.log({oldTheta1, oldTheta2, theta1, theta2, heading});\n\n\treturn heading;\n}\n\n/**\n * Convert polar coordinates to cartesian coordinates\n * @param  {float} r\n * @param  {float} theta\n * @return {object}\n */\nexport function polarToCartesian(r, theta) {\n\tconst dx = r * Math.cos(theta);\n\tconst dy = r * Math.sin(theta);\n\n\treturn {dx, dy};\n}\n\n/**\n * Convert cartesian coordiantes to polar coordinates\n * @param  {float} dx  x value from 0,0\n * @param  {float} dy  y value from 0,0\n * @return {object}\n */\nexport function cartesianToPolar(dx, dy) {\n\n\tconst r = Math.sqrt((dx * dx) + (dy * dy));\n\n\tconst theta = Math.atan2(dy, dx);\n\n\treturn {r, theta};\n}\n\n/**\n * Convert a value in degrees to a radian value\n * @param  {Number} degrees\n * @return {Number}\n */\nexport function degreeToRadian(degrees) {\n\treturn degrees * (Math.PI / 180);\n}\n\n/**\n * Convert a clockwise degree to a counter clockwise degree\n * @param  {Number} degrees\n * @return {Number}\n */\nexport function clockwiseToCounterClockwise(degrees) {\n\treturn 360 - degrees;\n}\n\n/**\n * Finds the smallest rotation to the local north (wich is 90deg on a radial axis)\n * @param  {Number} degrees\n * @return {Number}\n */\nexport function rotationToLocalNorth(degrees) {\n\n\tconst left = degrees - 90;\n\tconst right = 360 - degrees + 90;\n\n\treturn Math.min(left, right);\n}\n","/**\n * Normalize a set of weights\n * @param  {Array} weights\n * @return {Array}\n */\nexport function normalizeWeights(weights) {\n\tconst totalWeight = weights.reduce((total, w) => total + w, 0);\n\n\treturn weights.map(w => w / totalWeight);\n}\n\n/**\n * Convert an array of weights to an cumulative sum array\n * @param  {Array} weights\n * @return {Array}\n */\nexport function weightedCumulativeSum(weights) {\n\n\tconst normalisedWeights = normalizeWeights(weights);\n\n\tlet total = 0;\n\treturn normalisedWeights.map(w => {\n\t\ttotal = w + total;\n\t\treturn total;\n\t});\n}\n\n/**\n * Samples a new set using a low variance sampler from a array of weights\n * @param {Number} nSamples Number of samples to sample\n * @param {Array} weights \tWeight array\n * @return {Array} An array with indices corresponding to the selected weights\n */\nexport function lowVarianceSampling(nSamples, weights) {\n\n\tconst M = weights.length;\n\tconst normalizedWeights = normalizeWeights(weights);\n\n\tconst rand = Math.random() * (1 / M);\n\n\tlet c = normalizedWeights[0];\n\tlet i = 0;\n\n\tconst set = [];\n\n\tfor (let m = 1; m <= nSamples; m++) {\n\t\tconst U = rand + (m - 1) * (1 / M);\n\n\t\twhile (U > c) {\n\t\t\ti = i + 1;\n\t\t\tc = c + normalizedWeights[i];\n\t\t}\n\n\t\tset.push(i);\n\t}\n\n\treturn set;\n}\n\n/**\n * Sample using roulette wheel sampler from a array of weights\n * @param {Number} nSamples Number of samples to sample\n * @param {Array} weights \tWeight array\n * @return {Array} An array with indices corresponding to the selected weights\n */\nexport function rouletteWheelSampling(nSamples, weights) {\n\n\tconst stackedWeights = weightedCumulativeSum(weights);\n\tconst set = [];\n\n\tfor (let i = 0; i < nSamples; i++) {\n\n\t\tconst rand = Math.random();\n\n\t\tfor (var m = 0; m < stackedWeights.length; m++) {\n\n\t\t\tif (stackedWeights[m] >= rand) {\n\t\t\t\tset.push(m);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn set;\n}\n\n/**\n * Calculate the effective number of particles\n * @see http://en.wikipedia.org/wiki/Particle_filter#Sequential_importance_resampling_.28SIR.29\n * @return {Number}\n */\nexport function numberOfEffectiveParticles(weights) {\n\tconst normalisedWeights = normalizeWeights(weights);\n\n\treturn 1 / normalisedWeights.reduce((total, w) => total + (w * w));\n}","class ReplayRenderer {\n\n    constructor(element, landmarkPositions, xMax = 10, yMax = 10, offsetX = 0.5, offsetY = 0.5) {\n        this.element = element;\n        this.canvas = document.getElementById(element);\n        this.ctx = this.canvas.getContext('2d');\n\n        this.trueLandmarkPositions = landmarkPositions;\n\n        this.xMax = xMax;\n        this.yMax = yMax;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n\n        this._resizeCanvas();\n        this.scaleFactor = this._calculateScaleFactor();\n    }\n\n    render(particleSet) {\n        this.clearCanvas();\n\n\t\tconst best = particleSet.bestParticle();\n\n\t\tparticleSet.particles().forEach((p) => {\n\n\t\t\tif (p === best) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._plotUserTrace(p.user, '#CCCCCC', 0.5);\n\t\t});\n\n\t\t//Plot any landmark init filters\n\t\tlet color = 50;\n\n\t\tparticleSet.landmarkInitSet.particleSetMap.forEach((landmarkPf) => {\n\t\t\tlandmarkPf.particles.forEach((p) => {\n\t\t\t\tthis._plotObject(p, 'rgb(0,' + color + ',0)', 5);\n\t\t\t});\n\n            color += 50;\n\t\t});\n\n\t\t//Plot the best user trace\n\t\tthis._plotUserTrace(best.user, '#24780D');\n\n        //Plot the landmarks of the best particle\n        best.landmarks.forEach((landmark) => {\n\t\t\tthis._plotObject(landmark, '#B52B2B', 10);\n\t\t});\n\n        //Plot the true landmarks\n        for (let name in this.trueLandmarkPositions) {\n            if (this.trueLandmarkPositions.hasOwnProperty(name)) {\n\n                const landmark =  this.trueLandmarkPositions[name];\n                landmark.name = name;\n\n                this._plotObject(landmark, '#000000', 10);\n            }\n        }\n\n\t\treturn this;\n    }\n\n    /**\n\t * Clear the canvas\n\t * @return {ReplayRenderer}\n\t */\n\tclearCanvas() {\n\n\t\t//Save transformation matrix\n\t\tthis.ctx.save();\n\n\t\t//Reset the transform to clear the whole canvas\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\t//Restore transformation\n\t\tthis.ctx.restore();\n\n\t\treturn this;\n\t}\n\n    /**\n\t * Resize the canvas for retina devices\n\t * @return {void}\n\t */\n\t_resizeCanvas() {\n\n\t\tconst cs = window.getComputedStyle(this.canvas);\n\t\tconst width = parseInt(cs.getPropertyValue('width'), 10);\n\t\tconst height = parseInt(cs.getPropertyValue('height'), 10);\n\n\t\t//Calcuate a factor for the resolution\n\t\t//Use 1.99 scale on retina devices\n\t\tconst resolutionFactor = window.devicePixelRatio && window.devicePixelRatio === 2 ? 1.99 : 1;\n\n\t\t//Make the canvas smaller with css\n\t\tthis.canvas.width = width * resolutionFactor;\n\t\tthis.canvas.height = height * resolutionFactor;\n\t\tthis.canvas.style.width = width + 'px';\n\t\tthis.canvas.style.height = height + 'px';\n\t}\n\n\t/**\n\t * Scale the canvas to zoom in\n\t * @return {void}\n\t */\n\t_calculateScaleFactor() {\n\n\t\tconst width = this.canvas.width;\n\t\tconst height = this.canvas.height;\n\n\t\t//Calculate maximal possible scalefactor\n\t\tconst scaleXMax = width / (this.xMax + this.offsetX);\n\t\tconst scaleYMax = height / (this.yMax + this.offsetY);\n\n\t\treturn Math.min(scaleXMax, scaleYMax);\n\t}\n\n    /**\n\t * Plot a user object on the canvas\n\t * @param  {User} user\n\t * @param  {String} color\n\t * @param  {float} Range of the sensor\n\t * @return {void}\n\t */\n\t_plotUserTrace(user, color = '#A8A8A8', lineWidth = 2) {\n\n\t\tthis.ctx.lineJoin = 'round';\n\t\tthis.ctx.lineWidth = lineWidth;\n\t\tthis.ctx.fillStyle = '#960E0E';\n\t\tthis.ctx.strokeStyle = color;\n\n\t\tthis.ctx.beginPath();\n\n\t\tlet resize = false;\n\n\t\tuser.trace.values().forEach(({x, y, theta}, i) => {\n\n\t\t\tconst tX = this._tx(x);\n\t\t\tconst tY = this._ty(y);\n\n\t\t\tif (i === 0) {\n\t\t\t\tthis.ctx.moveTo(tX, tY);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.ctx.lineTo(tX, tY);\n\t\t\t}\n\t\t});\n\n\t\tthis.ctx.stroke();\n\t\tthis.ctx.closePath();\n\n\t\treturn resize;\n\t}\n\n    /**\n\t * Translate x\n\t * @param  {Number} x\n\t * @return {Number}\n\t */\n\t_tx(x) {\n\t\treturn (x + this.offsetX) * this.scaleFactor;\n\t}\n\n\t/**\n\t * Translate y\n\t * @param  {Number} y\n\t * @return {Number}\n\t */\n\t_ty(y) {\n\t\treturn (this.yMax - (y + this.offsetY)) * this.scaleFactor;\n\t}\n\n\t/**\n\t * Plot a object\n\t * @param {Object} objects A objects with at least an x,y value\n\t * @param {string} fillStyle\n\t */\n\t_plotObject(object, fillStyle = '#000000', size = 3) {\n\t\tthis.ctx.fillStyle = fillStyle;\n\n\t\t//Compensate for landmark size\n\t\tvar x = this._tx(object.x) - (0.5 * size);\n\t\tvar y = this._ty(object.y) - (0.5 * size);\n\n\t\tthis.ctx.fillRect(x, y, size, size);\n\n\t\tif(object.name !== undefined) {\n\t\t\tthis.ctx.font = \"15px serif\";\n\t\t\tthis.ctx.fillStyle = \"#000000\";\n\t\t\tthis.ctx.fillText(object.name, x, y);\n\t\t}\n\t}\n}\n\nexport default ReplayRenderer;\n","import config from './config';\nimport SlacController from './slac-controller';\nimport ReplayRenderer from './view/replay-renderer';\nimport { degreeToNormalisedHeading } from './util/motion';\n\n/**\n * Application object for replaying recorded data\n * @type {Object}\n */\nwindow.SlacApp = {\n\n    bleEventIteration: 0,\n    motionEventIteration: 0,\n\n    controller: undefined,\n    renderer: undefined,\n\n    bleInterval: undefined,\n    motionInterval: undefined,\n\n    lastUpdate: 0,\n\n    startMotionTimestamp: 0,\n    currentMotionTimestamp: 0,\n\n    startHeading: 0,\n\n    distPlots: {},\n\n    initialize() {\n\n        if(SlacJsData === undefined) {\n            console.error('No replay data found');\n        }\n\n        if(SlacJsLandmarkPositions === undefined) {\n            console.error('No true landmark positions found');\n        }\n\n        if(SlacJsStartingPosition === undefined) {\n            console.error('No starting position found');\n        }\n\n        //Create a renderer for the canvas view\n\t\tthis.renderer = new ReplayRenderer('slacjs-map', SlacJsLandmarkPositions);\n\n        //Create a plot for the rssi data\n        for(name in SlacJsLandmarkPositions) {\n            if (SlacJsLandmarkPositions.hasOwnProperty(name)) {\n\n                this._createDistPlot(name);\n            }\n        }\n    },\n\n    start() {\n\n        //Store the current heading\n        this.startHeading = SlacJsData.motion[0].heading;\n\n        //Update the initial pose with the true starting position\n        config.particles.user.defaultPose.x = SlacJsStartingPosition.x;\n        config.particles.user.defaultPose.y = SlacJsStartingPosition.y;\n\n        //Create a new controller\n        this.controller = new SlacController(config);\n\n        //We hack the controller to update the BLE observations before we run the internal update function\n        this.controller.pedometer.onStep(() => {\n\n            this._updateBleObservations(this.currentMotionTimestamp);\n            this.controller._update();\n\n            //Take the last observations and output the measurement error\n            //for the best particle\n            const user = this.controller.particleSet.userEstimate();\n\n            this.controller.lastObservations.forEach((obs) => {\n                const trueDist = this.distanceToBeacon(user.x, user.y, obs.name);\n\n                this._updateDistPlot(obs.name, trueDist, obs.r);\n            });\n        });\n\n        this.controller.start();\n\n        //Bind renderer to controller\n\t\tthis.controller.onUpdate((particles) => this.renderer.render(particles));\n\n        //Save the start time, we use this to determine which BLE events to send\n        this.lastUpdate = new Date().getTime();\n\n        this.motionInterval = setInterval(() => this._processMotionObservation(), config.sensor.frequency);\n    },\n\n    /**\n     * Utility function that returns the true distance to a beacon given a x,y position\n     * @param  {Number} x         Location of user\n     * @param  {Number} y         Location of user\n     * @param  {String} name      Beacon name\n     * @return {Number}           Distance\n     */\n    distanceToBeacon(x, y, name) {\n\n        const beacon = SlacJsLandmarkPositions[name];\n\n        const dx = x - beacon.x;\n        const dy = y - beacon.y;\n\n        return Math.sqrt((dx * dx) + (dy * dy));\n    },\n\n    /**\n     * Simulate a motion event\n     * @return {void}\n     */\n    _processMotionObservation() {\n\n        if(this.motionEventIteration >= SlacJsData.motion.length) {\n            clearInterval(this.motionInterval);\n\n            console.log('[SLACjs] Motion events finished');\n            return;\n        }\n\n        const data = SlacJsData.motion[this.motionEventIteration];\n\n        if(this.startMotionTimestamp === 0) {\n            this.startMotionTimestamp = data.timestamp;\n        }\n\n        this.controller.addMotionObservation(\n            data.x, data.y, data.z,\n            degreeToNormalisedHeading(data.heading, this.startHeading)\n        );\n\n        this.currentMotionTimestamp = data.timestamp;\n        this.motionEventIteration++;\n    },\n\n    /**\n     * Process all BLE observations until timestamp\n     * @param  {Number} timestamp\n     * @return {void}\n     */\n    _updateBleObservations(timestamp) {\n\n        let current;\n\n        do {\n            current = SlacJsData.bluetooth[this.bleEventIteration];\n\n            this.controller.addDeviceObservation(current.address, current.rssi, current.name);\n            this.bleEventIteration++;\n\n            this._updateRssiPlot(current.name, current.rssi)\n        }\n        while(current.timestamp <= timestamp);\n    },\n\n    _createDistPlot(name) {\n        $('#dist-plots').append(`<div id=\"${name}-dist\"></div>`);\n\n        this.distPlots[name] = {\n\n            data: {\n                real: [],\n                measured: [],\n                rssi: [],\n                index: 0\n            },\n\n            plot: new Highcharts.Chart({\n                chart: {\n                    renderTo: `${name}-dist`,\n                },\n                title: {\n                    text: `${name}`,\n                },\n                xAxis: {\n                    title: {\n                        text: 'Time'\n                    }\n                },\n                yAxis: [\n                    {\n                        title: {\n                            text: 'Distance'\n                        },\n                    },\n                    {\n                        title: {\n                            text: 'RSSI'\n                        },\n                        opposite: true\n                    }\n                ],\n                series: [\n                    {\n                        name: 'Computed distance from average user (averaged over all particles) to real beacon location',\n                        type: 'line',\n                        yAxis: 0\n                    },\n                    {\n                        name: 'Measured distance to beacon using path loss model',\n                        type: 'line',\n                        yAxis: 0\n                    },\n                    {\n                        name: 'RSSI',\n                        type: 'line',\n                        yAxis: 1\n                    }\n                ]\n            })\n        }\n    },\n\n    _updateRssiPlot(name, rssi) {\n\n        //Filter invalid values\n        if(rssi > 0) {\n            rssi = null;\n        }\n\n        const plot = this.distPlots[name];\n        plot.data.rssi.push([plot.data.index, rssi]);\n        plot.data.index++;\n\n        plot.plot.series[2].setData(plot.data.rssi);\n    },\n\n    _updateDistPlot(name, real, measured) {\n\n        const plot = this.distPlots[name];\n\n        plot.data.real.push([plot.data.index, real]);\n        plot.data.measured.push([plot.data.index, measured]);\n\n        plot.plot.series[0].setData(plot.data.real);\n        plot.plot.series[1].setData(plot.data.measured);\n    }\n};\n","import LandmarkInitializationSet from '../app/models/landmark-init-set';\n\nif (window.test === undefined) {\n\twindow.test = {};\n}\n\n/**\n * Pattern that the user walks\n * @yield {Number}\n */\nfunction* walkPattern() {\n\tconst steps = 40;\n\tconst stepSize = 2;\n\tconst quarter = steps / 4;\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tif (i < quarter) {\n\t\t\tyield {dx: stepSize, dy: 0};\n\t\t}\n\t\telse if (i < (2 * quarter)) {\n\t\t\tyield {dx: 0, dy: stepSize};\n\t\t}\n\t\telse if (i < (3 * quarter)) {\n\t\t\tyield {dx: -stepSize, dy: 0};\n\t\t}\n\t\telse if (i < steps) {\n\t\t\tyield {dx: 0, dy: -stepSize}; \n\t\t}\n\t}\n}\n\nwindow.test.landmarkInit = {\n\n\tlandmarkSet: undefined,\n\tuserX: 0,\n\tuserY: 0,\n\tlX: 0,\n\tlY: 0,\n\tuserTrace: [],\n\txMax: 50,\n\tyMax: 50,\n\tctx: undefined,\n\tcanvas: undefined,\n\n\tpattern: undefined,\n\n\tinitialize: function() {\n\n\t\t//Init random landmark\n\t\tthis.lX = Math.random() * 30 - 15;\n\t\tthis.lY = Math.random() * 30 - 15;\n\n\t\tthis.landmarkSet = new LandmarkInitializationSet();\n\t\tthis.canvas = document.getElementById('test-content');\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.ctx.scale(10, 10);\n\n\t\tthis.userTrace.push({x: this.userX, y: this.userY});\n\n\t\tthis.pattern = walkPattern();\n\t},\n\n\titerate: function() {\n\n\t\tconst {dx, dy} = this.pattern.next().value;\n\n\t\tthis.userX = this.userX + dx;\n\t\tthis.userY = this.userY + dy;\n\n\t\tthis.userTrace.push({x: this.userX, y: this.userY});\n\n\t\tconst r = Math.sqrt(Math.pow(this.lX - this.userX, 2) + Math.pow(this.lY - this.userY, 2));\n\n\t\tthis.landmarkSet.addMeasurement('uid', this.userX, this.userY, r);\n\n\t\tthis._draw();\n\t\tconsole.debug(`True r: ${r}`);\n\t},\n\n\t_draw: function() {\n\n\t\tthis.ctx.clearRect (0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.ctx.fillStyle = '#000000';\n\n\t\tthis.landmarkSet.particleSetMap.get('uid').particles.forEach((p) => {\n\n\t\t\tconst x = this._tx(p.x);\n\t\t\tconst y = this._ty(p.y);\n\n\t\t\tthis.ctx.fillRect(x, y, 0.3, 0.3);\n\t\t});\n\n\t\tthis.ctx.fillStyle = '#ff0000';\n\t\tthis.userTrace.forEach((t) => this.ctx.fillRect(this._tx(t.x), this._ty(t.y), 0.5, 0.5));\n\n\t\tthis.ctx.fillStyle = '#00ff00';\n\t\tthis.ctx.fillRect(this._tx(this.lX), this._ty(this.lY), 0.5, 0.5);\n\t},\n\n\t_tx: function(x) {\n\t\treturn x + (this.xMax / 2);\n\t},\n\n\t_ty: function(y) {\n\t\treturn this.yMax - (y + (this.yMax / 2));\n\t}\n};","import Landmark from '../app/simulation/landmark';\nimport config from '../app/config';\nimport KalmanFilter from '../app/util/kalman';\nimport { variance } from '../app/util/math';\n\nif (window.test === undefined) {\n\twindow.test = {};\n}\n\nwindow.test.rssiFilter = {\n\n\tlandmark: undefined,\n\tkalman: undefined,\n\n\tuserX: 5,\n\tuserY: 0,\n\n\trssiTrue: [],\n\trssiRaw: [],\n\trssiFiltered: [],\n\terror: [],\n\trealError: [],\n\n\titeration: 0,\n\n\tinitialize: function() {\n\n\t\tthis.landmark = new Landmark('uid', {x: 0, y: 0}, config.beacons);\n\t\tthis.kalman = new KalmanFilter({\n\t\t\tQ: config.beacons.noise,\n\t\t\tR: 0.008\n\t\t});\n\t},\n\n\titerate: function() {\n\n\t\tif(this.iteration % 100 === 0) {\n\t\t\tthis.userX += 5;\n\t\t\t//this.kalman.R = 1;\n\t\t}\n\n\t\tconst rssi = this.landmark.rssiAt(this.userX, this.userY);\n\t\tconst rssiTrue = this.landmark.rssiAtRaw(this.userX, this.userY);\n\t\tconst rssiFiltered = this.kalman.filter(rssi);\n\n\t\tthis.rssiTrue.push([this.iteration, rssiTrue]);\n\t\tthis.rssiRaw.push([this.iteration, rssi]);\n\t\tthis.rssiFiltered.push([this.iteraton, rssiFiltered]);\n\n\t\tthis.error.push(Math.abs(rssiTrue - rssiFiltered));\n\t\tthis.realError.push(Math.abs(rssiTrue - rssi));\n\n\t\tthis.iteration++;\n\t},\n\n\tplot: function() {\n\t\t$('#test-content').highcharts({\n\t\t\tchart: {\n\t\t\t\ttype: 'scatter'\n\t\t\t},\t\n\t\t\ttitle: {\n\t\t\t\ttext: 'RSSI'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Time'\n\t\t\t\t}\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'RSSI'\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'True RSSI',\n\t\t\t\t\tdata: this.rssiTrue\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Raw RSSI',\n\t\t\t\t\tdata: this.rssiRaw\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'Filtered RSSI',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tdata: this.rssiFiltered\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t$('#test-error').html(this.error.reduce((p, c, i) => p+(c-p)/(i+1), 0));\n\t\t$('#test-error-var').html(variance(this.error, (e) => e));\n\t\t$('#test-error-real').html(this.realError.reduce((p, c, i) => p+(c-p)/(i+1), 0));\n\t\t$('#test-error-real-var').html(variance(this.realError, (e) => e));\n\t}\n};","import VoteAccumulator from '../app/models/vote-accumulator';\n\nif (window.test === undefined) {\n\twindow.test = {};\n}\n\nwindow.test.voting = {\n\n\tvotes: undefined,\n\tuserX: 0,\n\tuserY: 0,\n\ttrace: [],\n\n\tlX: -5,\n\tlY: 10,\n\n\tlR: 0,\n\tlC: 0,\n\n\tinitialize: function() {\n\t\tthis.votes = new VoteAccumulator(75, 5);\n\n\t\tconst {row, column} = this.votes._cartesianToCell(this.lX, this.lY);\n\t\tthis.lR = row;\n\t\tthis.lC = column;\n\n\t\t//Create a table to show the votes\n\t\tdocument.getElementById('test-content').innerHTML = this._createOutputTable();\n\t\tthis._displayLandmark();\n\t},\n\n\titerate: function() {\n\n\t\tthis.userX += Math.random() * 4 - 2;\n\t\tthis.userY += Math.random() * 6 - 3;\n\n\t\tthis.trace.push({x: this.userX, y: this.userY});\n\n\t\tconst r = Math.sqrt(Math.pow(this.lX - this.userX, 2) + Math.pow(this.lY - this.userY, 2)) + (Math.random() * 6 - 3);\n\n\t\tthis.votes.addMeasurement(this.userX, this.userY, r);\n\n\t\tdocument.getElementById('test-content').innerHTML = '';\n\t\tdocument.getElementById('test-content').innerHTML = this._createOutputTable();\n\t\tthis._displayLandmark();\n\t\tthis._displayUser();\n\t},\n\n\t_createOutputTable: function() {\n\n\t\tlet table = '<table>';\n\n\t\ttable += this.votes.votes.reduce((output, row, rowN) => {\n\t\t\treturn output\n\t\t\t\t\t+ '<tr>'\n\t\t\t\t\t+ row.reduce((rowOutput, cell, columnN) => {\n\t\t\t\t\t\tconst color = 'background-color: rgba(0, 0, 0, ' + (cell / 50) + ');';\n\t\t\t\t\t\tconst id = rowN + '' + columnN;\n\n\t\t\t\t\t\treturn rowOutput +\n\t\t\t\t\t\t\t\t'<td id=\"' + id + '\" style=\"' + color + '\">'\n\t\t\t\t\t\t\t\t+ cell +\n\t\t\t\t\t\t\t\t'</td>';\n\t\t\t\t\t}, '')\n\n\t\t\t\t\t+ '</tr>';\n\t\t}, '');\n\n\t\ttable += '</table>';\n\t\treturn table;\n\t},\n\n\t_displayLandmark: function() {\n\t\tdocument.getElementById(this.lR + '' + this.lC).style.backgroundColor = 'red';\n\t},\n\n\t_displayUser: function() {\n\t\tthis.trace.forEach((pos) => {\n\t\t\tconst {row, column} = this.votes._cartesianToCell(pos.x, pos.y);\n\n\t\t\tdocument.getElementById(row + '' + column).style.backgroundColor = 'green';\n\t\t});\n\t}\n};"]}